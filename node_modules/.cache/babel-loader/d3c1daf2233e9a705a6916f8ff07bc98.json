{"ast":null,"code":"var _jsxFileName = \"/Users/vivian/Desktop/hunter_fall2021_cs5610_mod3-main\\u7684\\u526F\\u672C/src/components/pages/Favorites.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../../App.css';\nimport JobCard from '../jobDisplay/jobCard.js';\nimport Pagination from '../jobDisplay/Pagination';\nimport axios from 'axios';\nimport helper from '../../helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Favorites(props) {\n  _s();\n\n  const [idList, setIdList] = useState({\n    ids: []\n  });\n  const [jobList, setJobList] = useState([]);\n  const [isVisit, setVisit] = useState({\n    whoIsLoggedIn: false,\n    findFavorite: false\n  });\n  const [userLog, setUserLog] = useState({\n    user: '',\n    isLog: false\n  });\n  var idArray = [];\n  useEffect(() => {\n    axios.get('/api/users/whoIsLoggedIn').then(response => {\n      console.log(\"api request\"); // alert(response.request.responseURL)\n\n      if (response.data !== '') {\n        setUserLog({ ...userLog,\n          user: response.data,\n          isLog: true\n        });\n        var idUrl = 'api/users/findFavorite/' + response.data;\n        axios.get(idUrl).then(response => {\n          console.log(response.data);\n          response.data.map((item, index) => {\n            console.log(item);\n            var jobUrl = 'api/jobs/findId/' + item;\n            axios.get(jobUrl).then(response => {\n              setJobList([...jobList, response.data]);\n            }).catch(error => {\n              console.log(error);\n            });\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n        helper.isLog = true;\n        helper.username = response.data;\n      }\n    }).catch(error => {\n      console.log(error); // alert(\"register fail\")\n\n      console.log(error);\n    });\n  }, []); // if (isVisit.whoIsLoggedIn === false) {\n  //   axios.get('/api/users/whoIsLoggedIn')\n  //     .then(response => {\n  //       console.log(response.data);\n  //       if (response.data !== '') {\n  //         setUserLog({\n  //           ...userLog,\n  //           user: response.data,\n  //           isLog: true\n  //         });\n  //         setVisit({\n  //           ...isVisit,\n  //           whoIsLoggedIn:true\n  //         })\n  //       }\n  //     })\n  //     .catch(error => {\n  //       console.log(error)\n  //     });\n  // }\n  // if (isVisit.findFavorite === false) {\n  //   if (userLog.isLog === true) {\n  //     var idUrl = 'api/users/findFavorite/' + userLog.user;\n  //     axios.get(idUrl)\n  //       .then(response => {\n  //         setIdList({\n  //           ...idList,\n  //           ids: response.data\n  //         });\n  //         setVisit({\n  //           ...isVisit,\n  //           findFavorite:true\n  //         })\n  //         console.log(response.data);\n  //         console.log(idList.ids)\n  //       })\n  //       .catch(error => {\n  //         console.log(error)\n  //       });\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchResult\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobcard\",\n        children: idArray.map((item, index) => {\n          var jobUrl = 'api/jobs/findId/' + item;\n          axios.get(jobUrl).then(response => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(JobCard, {\n                jobInfo: response.data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this);\n          }).catch(error => {\n            console.log(error);\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n} // }\n\n_s(Favorites, \"tasORQYDVVypVtBhjLSdTNjCmSE=\");\n\n_c = Favorites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"sources":["/Users/vivian/Desktop/hunter_fall2021_cs5610_mod3-main的副本/src/components/pages/Favorites.js"],"names":["React","useEffect","useState","JobCard","Pagination","axios","helper","Favorites","props","idList","setIdList","ids","jobList","setJobList","isVisit","setVisit","whoIsLoggedIn","findFavorite","userLog","setUserLog","user","isLog","idArray","get","then","response","console","log","data","idUrl","map","item","index","jobUrl","catch","error","username"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../../App.css';\nimport JobCard from '../jobDisplay/jobCard.js';\nimport Pagination from '../jobDisplay/Pagination';\nimport axios from 'axios';\nimport helper from '../../helper';\n\n\nexport default function Favorites(props) {\n  const [idList, setIdList] = useState({\n    ids: []\n  });\n\n  const [jobList, setJobList] = useState([]);\n\n  const [isVisit, setVisit] = useState({\n    whoIsLoggedIn: false,\n    findFavorite: false,\n  });\n\n  const [userLog, setUserLog] = useState({\n    user: '',\n    isLog: false\n  })\n  var idArray=[];\n\n  useEffect(() => {\n    axios.get('/api/users/whoIsLoggedIn')\n      .then(response => {\n        console.log(\"api request\")\n        // alert(response.request.responseURL)\n        if(response.data!==''){\n          setUserLog({\n              ...userLog,\n              user: response.data,\n              isLog:true\n          });\n          var idUrl = 'api/users/findFavorite/' + response.data;\n      axios.get(idUrl)\n        .then(response => {\n          console.log(response.data)\n          response.data.map((item, index) => {\n            console.log(item)\n            var jobUrl = 'api/jobs/findId/' + item;\n            axios.get(jobUrl)\n              .then(response => {\n                setJobList([...jobList,response.data])\n              })\n              .catch(error => {\n                console.log(error);\n              })\n          })\n        })\n        .catch(error => {\n          console.log(error)\n        });\n          helper.isLog = true;\n          helper.username = response.data;\n        }\n      })\n      .catch(error => {\n        console.log(error)\n        // alert(\"register fail\")\n        console.log(error)\n      });\n  \n},[]);\n\n\n  // if (isVisit.whoIsLoggedIn === false) {\n  //   axios.get('/api/users/whoIsLoggedIn')\n  //     .then(response => {\n  //       console.log(response.data);\n  //       if (response.data !== '') {\n  //         setUserLog({\n  //           ...userLog,\n  //           user: response.data,\n  //           isLog: true\n  //         });\n  //         setVisit({\n  //           ...isVisit,\n  //           whoIsLoggedIn:true\n  //         })\n  //       }\n  //     })\n  //     .catch(error => {\n  //       console.log(error)\n  //     });\n  // }\n\n  // if (isVisit.findFavorite === false) {\n  //   if (userLog.isLog === true) {\n  //     var idUrl = 'api/users/findFavorite/' + userLog.user;\n  //     axios.get(idUrl)\n  //       .then(response => {\n  //         setIdList({\n  //           ...idList,\n  //           ids: response.data\n  //         });\n  //         setVisit({\n  //           ...isVisit,\n  //           findFavorite:true\n  //         })\n  //         console.log(response.data);\n  //         console.log(idList.ids)\n  //       })\n  //       .catch(error => {\n  //         console.log(error)\n  //       });\n  //   }\n  // }\n\n\n\n  return (\n    <div>\n      <div className=\"searchResult\">\n        <h3>Your favorites</h3>\n        <div className='jobcard'>\n          {idArray.map((item, index) => {\n            var jobUrl = 'api/jobs/findId/' + item;\n            axios.get(jobUrl)\n              .then(response => {\n                return (\n                  <li key={index}>\n                    <JobCard jobInfo={response.data} />\n                  </li>\n                );\n              })\n              .catch(error => {\n                console.log(error);\n              })\n          })}\n        </div>\n      </div>\n      <Pagination />\n    </div>\n  );\n\n}\n// }\n"]},"metadata":{},"sourceType":"module"}